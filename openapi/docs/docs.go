// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/evaluate/policies": {
            "post": {
                "description": "Evaluate whether the input meets all the policies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Policies Evaluation"
                ],
                "summary": "Evaluate the input by policies",
                "parameters": [
                    {
                        "description": "evalCmdList",
                        "name": "cmdList",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.evalCmdList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.evalResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    }
                }
            }
        },
        "/evaluate/policies/raw": {
            "post": {
                "description": "Evaluate the input by all the policies and get raw result",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Policies Evaluation"
                ],
                "summary": "Evaluate the input by policies",
                "parameters": [
                    {
                        "description": "evalCmdList",
                        "name": "cmdList",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.evalCmdList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rego.Result"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    }
                }
            }
        },
        "/evaluate/policy": {
            "post": {
                "description": "Evaluate whether the input meets the policy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Policies Evaluation"
                ],
                "summary": "Evaluate the input by policies",
                "parameters": [
                    {
                        "description": "evalCmd",
                        "name": "cmd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.evalCmd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.evalResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    }
                }
            }
        },
        "/evaluate/policy/raw": {
            "post": {
                "description": "Evaluate the input by the policy and get raw result",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Policies Evaluation"
                ],
                "summary": "Evaluate the input by policies",
                "parameters": [
                    {
                        "description": "evalCmd",
                        "name": "cmd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.evalCmd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rego.Result"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check health status of service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Check health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.systemStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    }
                }
            }
        },
        "/validate/policies": {
            "post": {
                "description": "Validate the policies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Policies Validate"
                ],
                "summary": "Validate the policies",
                "parameters": [
                    {
                        "description": "policyList",
                        "name": "policyList",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.validatePolicyList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.ValidateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResult"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "rego.ExpressionValue": {
            "type": "object",
            "properties": {
                "location": {
                    "$ref": "#/definitions/rego.Location"
                },
                "text": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "rego.Location": {
            "type": "object",
            "properties": {
                "col": {
                    "type": "integer"
                },
                "row": {
                    "type": "integer"
                }
            }
        },
        "rego.Result": {
            "type": "object",
            "properties": {
                "bindings": {
                    "$ref": "#/definitions/rego.Vars"
                },
                "expressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rego.ExpressionValue"
                    }
                }
            }
        },
        "rego.Vars": {
            "type": "object",
            "additionalProperties": true
        },
        "server.ErrorResult": {
            "type": "object",
            "required": [
                "err_msg"
            ],
            "properties": {
                "err_msg": {
                    "type": "string"
                }
            }
        },
        "server.ValidateResponse": {
            "type": "object",
            "required": [
                "err_msg",
                "isSuccessful",
                "policy"
            ],
            "properties": {
                "err_msg": {
                    "type": "string"
                },
                "isSuccessful": {
                    "type": "boolean"
                },
                "policy": {
                    "type": "string"
                }
            }
        },
        "server.evalCmd": {
            "type": "object",
            "required": [
                "input",
                "policy"
            ],
            "properties": {
                "input": {
                    "type": "string"
                },
                "policy": {
                    "type": "string"
                }
            }
        },
        "server.evalCmdList": {
            "type": "object",
            "required": [
                "input",
                "policy_list"
            ],
            "properties": {
                "input": {
                    "type": "string"
                },
                "policy_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "server.evalResult": {
            "type": "object",
            "required": [
                "input",
                "isSuccessful",
                "policy"
            ],
            "properties": {
                "input": {
                    "type": "string"
                },
                "isSuccessful": {
                    "type": "boolean"
                },
                "policy": {
                    "type": "string"
                }
            }
        },
        "server.healthStatus": {
            "type": "string",
            "enum": [
                "OK",
                "NOK"
            ],
            "x-enum-varnames": [
                "healthOK",
                "healthNOK"
            ]
        },
        "server.systemStatus": {
            "type": "object",
            "required": [
                "healthStatus"
            ],
            "properties": {
                "healthStatus": {
                    "$ref": "#/definitions/server.healthStatus"
                }
            }
        },
        "server.validatePolicyList": {
            "type": "object",
            "required": [
                "policy_list"
            ],
            "properties": {
                "policy_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "OpenAPI of policy-man",
	Description:      "OpenAPI of policy-man server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
